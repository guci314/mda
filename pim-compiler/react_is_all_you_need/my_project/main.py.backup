from fastapi import FastAPI
from contextlib import asynccontextmanager
from database import init_db, get_db
from routers import articles_router, categories_router, comments_router
import uvicorn

@asynccontextmanager
async def lifespan(app: FastAPI):
    """应用生命周期管理"""
    # 启动时初始化数据库
    init_db()
    print("✅ 数据库初始化完成")
    yield
    # 关闭时清理资源
    print("🔄 应用正在关闭...")

# 创建FastAPI应用
app = FastAPI(
    title="博客系统API",
    description="基于FastAPI的博客系统后端API",
    version="1.0.0",
    lifespan=lifespan
)

# 注册路由
app.include_router(articles_router)
app.include_router(categories_router)
app.include_router(comments_router)

@app.get("/")
async def root():
    """根端点"""
    return {
        "message": "欢迎使用博客系统API",
        "version": "1.0.0",
        "docs": "/docs"
    }

@app.get("/health")
async def health_check():
    """健康检查端点"""
    return {"status": "healthy", "timestamp": "2024-12-19T10:30:00Z"}

if __name__ == "__main__":
    uvicorn.run("main:app", host="0.0.0.0", port=8000, reload=True)