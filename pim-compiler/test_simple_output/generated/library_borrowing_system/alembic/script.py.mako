"""Alembic script.py.mako

This is the Mako template used to generate migration scripts.
It is run by the `alembic revision` command.

"""
from alembic.runtime.migration import MigrationContext
from alembic.operations import Operations
from sqlalchemy.engine.base import Connection

# get the context, this is the first thing that the
# migration script will do, against the migration_context
# object.
#
# The migration context is a Python-internal object that is not
# serialized; it is provided to the script via a function-call
# argument.
#
# The "render_as_batch" keyword argument is new in Alembic 1.4 and
# is used to indicate that the script should be rendered in "batch"
# mode.   This mode is new in Alembic 1.4 and allows the script to
# be run against a database that does not support DDL transactions,
# such as SQLite.
#
# The "render_as_batch" keyword is also used to indicate that the
# script should be rendered with "batch" mode enabled for the
# Operations context.  This is a new feature in Alembic 1.4.
#
# For more information on batch mode, see:
#
# https://alembic.sqlalchemy.org/en/latest/batch.html
#
# revision identifiers, used by Alembic.
revision = ${repr(up_revision)}
down_revision = ${repr(down_revision)}
branch_labels = ${repr(branch_labels)}
depends_on = ${repr(depends_on)}


def upgrade():
    ${context.get('indent', '')}# ### commands auto generated by Alembic - please adjust! ###
${upgrades if upgrades else "    pass"}
    ${context.get('indent', '')}# ### end Alembic commands ###


def downgrade():
    ${context.get('indent', '')}# ### commands auto generated by Alembic - please adjust! ###
${downgrades if downgrades else "    pass"}
    ${context.get('indent', '')}# ### end Alembic commands ###
