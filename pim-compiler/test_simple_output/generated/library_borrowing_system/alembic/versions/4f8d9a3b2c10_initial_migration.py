"""Initial migration

Revision ID: 4f8d9a3b2c10
Revises: 
Create Date: 2025-07-24 10:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4f8d9a3b2c10'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('isbn', sa.String(length=20), nullable=False, comment='国际标准书号'),
    sa.Column('title', sa.String(length=255), nullable=False, comment='书名'),
    sa.Column('author', sa.String(length=100), nullable=False, comment='作者'),
    sa.Column('publisher', sa.String(length=100), nullable=False, comment='出版社'),
    sa.Column('publish_year', sa.Integer(), nullable=False, comment='出版年份'),
    sa.Column('category', sa.String(length=50), nullable=False, comment='分类'),
    sa.Column('total_stock', sa.Integer(), nullable=False, comment='总库存'),
    sa.Column('available_stock', sa.Integer(), nullable=False, comment='可借数量'),
    sa.Column('location', sa.String(length=100), nullable=False, comment='位置'),
    sa.Column('summary', sa.Text(), nullable=True, comment='简介'),
    sa.Column('status', sa.Enum('ON_SHELF', 'OFF_SHELF', name='bookstatus'), nullable=False, comment='状态'),
    sa.PrimaryKeyConstraint('isbn')
    )
    op.create_index('idx_book_author', 'books', ['author'], unique=False)
    op.create_index('idx_book_title', 'books', ['title'], unique=False)
    op.create_table('readers',
    sa.Column('reader_id', sa.String(length=50), nullable=False, comment='读者编号'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='姓名'),
    sa.Column('id_card_number', sa.String(length=18), nullable=False, comment='身份证号'),
    sa.Column('phone_number', sa.String(length=15), nullable=False, comment='手机号'),
    sa.Column('email', sa.String(length=100), nullable=True, comment='邮箱'),
    sa.Column('reader_type', sa.Enum('STUDENT', 'TEACHER', 'STAFF', name='readertype'), nullable=False, comment='读者类型'),
    sa.Column('registration_date', sa.DateTime(), nullable=False, comment='注册日期'),
    sa.Column('valid_until', sa.Date(), nullable=False, comment='有效期至'),
    sa.Column('status', sa.Enum('NORMAL', 'FROZEN', 'CANCELLED', name='readerstatus'), nullable=False, comment='状态'),
    sa.Column('credit_score', sa.Integer(), nullable=False, comment='信用分'),
    sa.PrimaryKeyConstraint('reader_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id_card_number')
    )
    op.create_table('borrow_records',
    sa.Column('borrow_id', sa.String(length=50), nullable=False, comment='借阅编号'),
    sa.Column('reader_id', sa.String(length=50), nullable=False),
    sa.Column('isbn', sa.String(length=20), nullable=False),
    sa.Column('borrow_date', sa.DateTime(), nullable=False, comment='借阅日期'),
    sa.Column('due_date', sa.Date(), nullable=False, comment='应还日期'),
    sa.Column('return_date', sa.DateTime(), nullable=True, comment='实际归还日期'),
    sa.Column('renewal_count', sa.Integer(), nullable=False, comment='续借次数'),
    sa.Column('status', sa.Enum('BORROWED', 'RETURNED', 'OVERDUE', 'LOST', name='borrowstatus'), nullable=False, comment='状态'),
    sa.Column('fine', sa.Numeric(precision=10, scale=2), nullable=True, comment='罚金'),
    sa.ForeignKeyConstraint(['isbn'], ['books.isbn'], ),
    sa.ForeignKeyConstraint(['reader_id'], ['readers.reader_id'], ),
    sa.PrimaryKeyConstraint('borrow_id')
    )
    op.create_index(op.f('ix_borrow_records_isbn'), 'borrow_records', ['isbn'], unique=False)
    op.create_index(op.f('ix_borrow_records_reader_id'), 'borrow_records', ['reader_id'], unique=False)
    op.create_table('reservation_records',
    sa.Column('reservation_id', sa.String(length=50), nullable=False, comment='预约编号'),
    sa.Column('reader_id', sa.String(length=50), nullable=False),
    sa.Column('isbn', sa.String(length=20), nullable=False),
    sa.Column('reservation_date', sa.DateTime(), nullable=False, comment='预约日期'),
    sa.Column('status', sa.Enum('WAITING', 'AVAILABLE', 'CANCELLED', 'COMPLETED', name='reservationstatus'), nullable=False, comment='预约状态'),
    sa.Column('notification_date', sa.DateTime(), nullable=True, comment='通知日期'),
    sa.Column('expiry_date', sa.DateTime(), nullable=True, comment='过期日期'),
    sa.ForeignKeyConstraint(['isbn'], ['books.isbn'], ),
    sa.ForeignKeyConstraint(['reader_id'], ['readers.reader_id'], ),
    sa.PrimaryKeyConstraint('reservation_id')
    )
    op.create_index(op.f('ix_reservation_records_isbn'), 'reservation_records', ['isbn'], unique=False)
    op.create_index(op.f('ix_reservation_records_reader_id'), 'reservation_records', ['reader_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reservation_records_reader_id'), table_name='reservation_records')
    op.drop_index(op.f('ix_reservation_records_isbn'), table_name='reservation_records')
    op.drop_table('reservation_records')
    op.drop_index(op.f('ix_borrow_records_reader_id'), table_name='borrow_records')
    op.drop_index(op.f('ix_borrow_records_isbn'), table_name='borrow_records')
    op.drop_table('borrow_records')
    op.drop_table('readers')
    op.drop_index('idx_book_title', table_name='books')
    op.drop_index('idx_book_author', table_name='books')
    op.drop_table('books')
    # ### end Alembic commands ###
