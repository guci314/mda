version: '3.8'

services:
  pim-engine:
    build: .
    container_name: pim-engine
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://pim:pim123@postgres:5432/pim_engine
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
      - HOT_RELOAD=true
      - SECRET_KEY=your-secret-key-please-change-in-production
    volumes:
      - ./models:/app/models
      - ./src:/app/src  # For development hot reload
      - ./static:/app/static  # For static files including mermaid.js
      - pim-data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pim-network

  postgres:
    image: postgres:16-alpine
    container_name: pim-postgres
    environment:
      - POSTGRES_USER=pim
      - POSTGRES_PASSWORD=pim123
      - POSTGRES_DB=pim_engine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pim"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pim-network

  redis:
    image: redis:7-alpine
    container_name: pim-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - pim-network

  # Optional: Adminer for database management
  adminer:
    image: adminer
    container_name: pim-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - pim-network

volumes:
  pim-data:
  postgres-data:
  redis-data:

networks:
  pim-network:
    driver: bridge